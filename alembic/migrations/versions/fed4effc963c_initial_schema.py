"""initial schema

Revision ID: fed4effc963c
Revises: 
Create Date: 2025-07-13 21:36:52.431006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fed4effc963c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coord',
    sa.Column('coord_id', sa.SmallInteger(), nullable=False),
    sa.Column('x', sa.SmallInteger(), nullable=True),
    sa.Column('y', sa.SmallInteger(), nullable=True),
    sa.PrimaryKeyConstraint('coord_id')
    )
    op.create_table('map',
    sa.Column('map_id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('map_level', sa.SmallInteger(), nullable=True),
    sa.Column('map_code', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('map_id')
    )
    op.create_table('place',
    sa.Column('pnu', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('pnu')
    )
    op.create_table('user',
    sa.Column('user_id', sa.SmallInteger(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('provider', sa.String(length=20), nullable=False),
    sa.Column('provider_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index('uq_user_provider_id', 'user', ['provider', 'provider_id'], unique=True)
    op.create_table('cell',
    sa.Column('coord_id', sa.SmallInteger(), nullable=False),
    sa.Column('map_id', sa.SmallInteger(), nullable=False),
    sa.Column('zone_code', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coord_id'], ['coord.coord_id'], ),
    sa.ForeignKeyConstraint(['map_id'], ['map.map_id'], ),
    sa.PrimaryKeyConstraint('coord_id', 'map_id')
    )
    op.create_table('commit',
    sa.Column('commit_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('pnu', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pnu'], ['place.pnu'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('commit_id')
    )
    op.create_index('idx_commit_pnu', 'commit', ['pnu'], unique=False)
    op.create_index('idx_commit_user_pnu', 'commit', ['user_id', 'pnu'], unique=False)
    op.create_table('grass',
    sa.Column('grass_id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('commit_id', sa.BigInteger(), nullable=False),
    sa.Column('coord_id', sa.SmallInteger(), nullable=False),
    sa.Column('map_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['commit_id'], ['commit.commit_id'], ),
    sa.ForeignKeyConstraint(['coord_id', 'map_id'], ['cell.coord_id', 'cell.map_id'], ),
    sa.PrimaryKeyConstraint('grass_id')
    )
    op.create_index('idx_grass_cell', 'grass', ['coord_id', 'map_id'], unique=False)
    op.create_table('unit',
    sa.Column('unit_code', sa.BigInteger(), nullable=False),
    sa.Column('coord_id', sa.SmallInteger(), nullable=False),
    sa.Column('map_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['coord_id', 'map_id'], ['cell.coord_id', 'cell.map_id'], ),
    sa.PrimaryKeyConstraint('unit_code')
    )
    op.create_index('idx_unit_cell', 'unit', ['coord_id', 'map_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_unit_cell', table_name='unit')
    op.drop_table('unit')
    op.drop_index('idx_grass_cell', table_name='grass')
    op.drop_table('grass')
    op.drop_index('idx_commit_user_pnu', table_name='commit')
    op.drop_index('idx_commit_pnu', table_name='commit')
    op.drop_table('commit')
    op.drop_table('cell')
    op.drop_index('uq_user_provider_id', table_name='user')
    op.drop_table('user')
    op.drop_table('place')
    op.drop_table('map')
    op.drop_table('coord')
    # ### end Alembic commands ###
